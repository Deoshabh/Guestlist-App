# Nginx configuration for Guest Management Application

# Set the number of worker processes automatically based on CPU cores
worker_processes auto;

# Set the maximum number of connections per worker
events {
    worker_connections 1024;
    multi_accept on;
}

http {
    # Basic settings
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Optimize sendfile
    sendfile_max_chunk 1m;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # SSL Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Frontend server configuration
    server {
        listen 80;
        server_name bhaujanvypar.com www.bhaujanvypar.com;
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "no-referrer-when-downgrade";
        add_header Content-Security-Policy "default-src 'self'; connect-src 'self' https://api.bhaujanvypar.com; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:;";

        # PWA assets caching
        location ~* \.(?:manifest|json|webmanifest)$ {
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
        }

        # Static assets caching
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, immutable";
        }

        location ~* \.(?:svg|png|jpg|jpeg|gif|ico|webp)$ {
            try_files $uri =404;
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, immutable";
        }

        # Don't cache service worker
        location = /service-worker.js {
            expires off;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        }

        # Handle SPA routing - send all non-asset requests to index.html
        location / {
            try_files $uri $uri/ /index.html =404;
        }

        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # API server configuration (reverse proxy)
    server {
        listen 80;
        server_name api.bhaujanvypar.com;

        # CORS headers for preflight requests
        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'https://bhaujanvypar.com';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With';
                add_header 'Access-Control-Max-Age' 86400;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # Forward API requests to the backend service
            proxy_pass http://backend:5002;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection '';
            
            # CORS headers for actual API responses 
            add_header 'Access-Control-Allow-Origin' 'https://bhaujanvypar.com' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }
    }

    # Redirect www to non-www 
    server {
        listen 80;
        server_name www.bhaujanvypar.com;
        return 301 https://bhaujanvypar.com$request_uri;
    }
}
