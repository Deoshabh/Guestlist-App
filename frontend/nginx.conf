# Guest Manager Nginx configuration
# This configuration is optimized for serving the React application and handling PWA/SPA routing

server {
    listen 80;
    listen [::]:80;
    server_name bhaujanvypar.com www.bhaujanvypar.com;
    
    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name bhaujanvypar.com www.bhaujanvypar.com;
    
    # SSL configuration would go here
    # ssl_certificate /path/to/cert.pem;
    # ssl_certificate_key /path/to/key.pem;
    
    # Configure SSL protocols and ciphers for security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    
    # Root directory where the built app is located
    root /usr/share/nginx/html;
    index index.html;
    
    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    
    # PWA cache control headers
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp)$ {
        expires 30d;
        add_header Cache-Control "public, max-age=2592000, immutable";
        access_log off;
        
        # Enable CORS for font files and assets
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
        
        # First attempt to serve the requested file directly
        try_files $uri =404;
    }
    
    # Service worker needs special cache headers
    location = /service-worker.js {
        expires off;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        access_log on;
    }
    
    # For static versioned chunks (contains hash in filename)
    location ~* ^/static/[^/]+/[^/]+\.[a-f0-9]{8}\.(js|css)$ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        access_log off;
    }
    
    # Proxy API requests to backend server
    location /api/ {
        proxy_pass http://localhost:5000; # Adjust to your backend
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Serve the index.html for routes
    location / {
        # First try to find the actual file
        try_files $uri $uri/ /index.html;
        
        # Cache settings for HTML files - important for PWA
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        # If serving index.html, add this header for security
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https://www.google-analytics.com; connect-src 'self' https://www.google-analytics.com; font-src 'self'; base-uri 'self'; form-action 'self'";
    }
    
    # Custom error pages
    error_page 404 /404.html;
    location = /404.html {
        internal;
        root /usr/share/nginx/html;
        
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # Handle favicon requests specially
    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }
    
    # Don't log requests for robots.txt
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }
    
    # Deny access to dot files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
